/**
 * @file gtn.h
 * @brief Игра "Угадай число" - игра на угадывание случайного числа
 * @author Development Team
 * @date 2025
 * @version 1.0
 * 
 * Этот файл содержит объявление класса Gtn (Guess The Number), который реализует
 * игру на угадывание числа в формате "больше-меньше". Игра включает систему
 * ставок и многошаговый процесс угадывания с подсказками.
 */

#ifndef GTN_H
#define GTN_H

#include <QDialog>
#include "clientapi.h"

namespace Ui {
class Gtn;
}

/**
 * @brief Игра "Угадай число" в формате "больше-меньше"
 * 
 * Класс Gtn реализует интерактивную игру на угадывание случайного числа.
 * Игровая механика включает:
 * - Генерацию случайного числа в определенном диапазоне
 * - Систему ставок (100, 500, 1000 робуксов)
 * - Пошаговое угадывание с подсказками "больше/меньше"
 * - Увеличение коэффициента выигрыша с каждым правильным шагом
 * - Возможность остановиться и забрать выигрыш
 * 
 * Правила игры:
 * - Игрок выбирает размер ставки
 * - Система генерирует случайное число
 * - Игрок пытается угадать, выбирая "больше" или "меньше"
 * - За каждый правильный шаг коэффициент выигрыша увеличивается
 * - Игрок может остановиться в любой момент и забрать накопленный выигрыш
 */
class Gtn : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор игры "Угадай число"
     * @param parent Родительский виджет
     */
    explicit Gtn(QWidget *parent = nullptr);
    
    /**
     * @brief Деструктор игры "Угадай число"
     */
    ~Gtn();
    
    /**
     * @brief Показать окно игры
     * 
     * Отображает интерфейс игры и подготавливает начальное состояние
     * для нового раунда угадывания
     */
    void slot_show();

private slots:
    /**
     * @brief Обработчик кнопки "Новое число"
     * 
     * Генерирует новое случайное число и начинает новый раунд игры
     */
    void on_new_number_clicked();

    /**
     * @brief Обработчик кнопки ставки 100 робуксов
     * 
     * Устанавливает размер ставки в 100 робуксов
     */
    void on_button100_clicked();

    /**
     * @brief Обработчик кнопки ставки 500 робуксов
     * 
     * Устанавливает размер ставки в 500 робуксов
     */
    void on_button500_clicked();

    /**
     * @brief Обработчик кнопки ставки 1000 робуксов
     * 
     * Устанавливает размер ставки в 1000 робуксов
     */
    void on_button1000_clicked();

    /**
     * @brief Обработчик кнопки "Больше"
     * 
     * Игрок делает предположение, что загаданное число больше текущего
     */
    void on_greater_button_clicked();

    /**
     * @brief Обработчик кнопки "Меньше"
     * 
     * Игрок делает предположение, что загаданное число меньше текущего
     */
    void on_less_button_clicked();

    /**
     * @brief Обработчик кнопки "Играть"
     * 
     * Начинает новый раунд игры с выбранной ставкой
     */
    void on_play_button_clicked();

    /**
     * @brief Обработчик кнопки "Назад"
     * 
     * Возвращает игрока в главное меню казино
     */
    void on_pushButton_clicked();

private:
    Ui::Gtn *ui;             ///< Пользовательский интерфейс игры
    
    /**
     * @brief Генерация нового случайного числа
     * @return Новое случайное число в заданном диапазоне
     * 
     * Создает новое число для угадывания в пределах игрового диапазона
     */
    int new_number();
    
    int num;                 ///< Загаданное число для угадывания
    int now_num;             ///< Текущее отображаемое число в процессе игры
    int block;               ///< Флаг блокировки кнопок во время анимации
    int rstavka;             ///< Размер текущей ставки
    int zstavka;             ///< Накопленный выигрыш в текущем раунде

    ClientApi *clientApi;    ///< API для взаимодействия с сервером

signals:
    /**
     * @brief Сигнал возврата в главное меню
     * 
     * Испускается при завершении игровой сессии и возврате
     * в основное меню казино
     */
    void to_main();
};

#endif // GTN_H
