/**
 * @file gtn.h
 * @brief Заголовочный файл игры "Угадай число"
 * @author Команда разработчиков
 * @date 2025
 * @version 1.0
 * 
 * Содержит объявление класса Gtn, который реализует мини-игру
 * "Больше-Меньше" (угадай число) в казино.
 */

#ifndef GTN_H
#define GTN_H

#include <QDialog>

namespace Ui {
class Gtn;
}

/**
 * @brief Класс игры "Угадай число" (Больше-Меньше)
 * 
 * Класс Gtn реализует логическую мини-игру, где игрок должен угадать
 * случайное число, выбирая "больше" или "меньше" от текущего числа.
 * 
 * Правила игры:
 * - Генерируется случайное число от 1 до 100
 * - Игрок делает ставку (100, 500 или 1000 робуксов)
 * - Игрок видит начальное число и выбирает "больше" или "меньше"
 * - При правильном угадывании игрок удваивает ставку
 * - При неправильном угадывании игрок теряет ставку
 * 
 * Игра основана на элементе удачи и интуиции игрока.
 */
class Gtn : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор игры "Угадай число"
     * @param parent Родительский виджет (по умолчанию nullptr)
     * 
     * Инициализирует интерфейс игры и устанавливает начальные значения.
     */
    explicit Gtn(QWidget *parent = nullptr);
    
    /**
     * @brief Деструктор игры "Угадай число"
     * 
     * Освобождает ресурсы, используемые игрой.
     */
    ~Gtn();
    
    /**
     * @brief Слот для показа окна игры
     * 
     * Отображает интерфейс игры и сбрасывает состояние
     * для начала новой игровой сессии.
     */
    void slot_show();

private slots:
    /**
     * @brief Обработчик кнопки генерации нового числа
     * 
     * Генерирует новое случайное число для игры и
     * обновляет интерфейс для начала новой попытки.
     */
    void on_new_number_clicked();

    /**
     * @brief Обработчик кнопки ставки 100 робуксов
     * 
     * Устанавливает размер ставки в 100 робуксов для текущей игры.
     * Проверяет достаточность средств на балансе игрока.
     */
    void on_button100_clicked();

    /**
     * @brief Обработчик кнопки ставки 500 робуксов
     * 
     * Устанавливает размер ставки в 500 робуксов для текущей игры.
     * Проверяет достаточность средств на балансе игрока.
     */
    void on_button500_clicked();

    /**
     * @brief Обработчик кнопки ставки 1000 робуксов
     * 
     * Устанавливает размер ставки в 1000 робуксов для текущей игры.
     * Проверяет достаточность средств на балансе игрока.
     */
    void on_button1000_clicked();

    /**
     * @brief Обработчик кнопки "Больше"
     * 
     * Регистрирует выбор игрока "больше" и готовит игру
     * к проверке результата при нажатии кнопки "Играть".
     */
    void on_greater_button_clicked();

    /**
     * @brief Обработчик кнопки "Меньше"
     * 
     * Регистрирует выбор игрока "меньше" и готовит игру
     * к проверке результата при нажатии кнопки "Играть".
     */
    void on_less_button_clicked();

    /**
     * @brief Обработчик кнопки "Играть"
     * 
     * Выполняет основную логику игры: сравнивает загаданное число
     * с выбором игрока, определяет победителя и начисляет/списывает
     * робуксы в зависимости от результата.
     */
    void on_play_button_clicked();

    /**
     * @brief Обработчик кнопки возврата в главное меню
     * 
     * Закрывает окно игры и возвращает игрока в главное меню казино.
     */
    void on_pushButton_clicked();

private:
    /** @brief Указатель на UI объект игры */
    Ui::Gtn *ui;
    
    /**
     * @brief Генерация нового случайного числа
     * @return Случайное число от 1 до 100
     * 
     * Создает новое случайное число для игровой сессии.
     */
    int new_number();
    
    /** @brief Загаданное число (от 1 до 100) */
    int num;
    
    /** @brief Текущее отображаемое число для сравнения */
    int now_num;
    
    /** @brief Флаг блокировки интерфейса во время игры */
    int block;
    
    /** @brief Размер текущей ставки игрока */
    int rstavka;
    
    /** @brief Общая сумма ставок за сессию */
    int zstavka;

signals:
    /**
     * @brief Сигнал возврата в главное меню
     * 
     * Испускается при нажатии кнопки возврата для
     * перехода к главному меню казино.
     */
    void to_main();
};

#endif // GTN_H
