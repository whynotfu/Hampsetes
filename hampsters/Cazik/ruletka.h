/**
 * @file ruletka.h
 * @brief Заголовочный файл игры в рулетку
 * @author Команда разработчиков
 * @date 2025
 * @version 1.0
 * 
 * Содержит объявление класса Ruletka, который реализует
 * классическую азартную игру "Рулетка" с цветными секторами.
 */

#ifndef RULETKA_H
#define RULETKA_H

#include <QDialog>

namespace Ui {
class Ruletka;
}

/**
 * @brief Игра в рулетку с цветными секторами
 * 
 * Класс Ruletka реализует классическую игру в рулетку со следующими особенностями:
 * - Ставки на красный, черный или зеленый цвет
 * - Возможность выбора размера ставки (100, 500, 1000 robux)
 * - Анимация вращения рулетки
 * - Автоматический подсчет выигрышей
 * 
 * Правила игры:
 * - Красный/Черный: коэффициент выигрыша x2
 * - Зеленый: коэффициент выигрыша x14 (редкий сектор)
 * - При проигрыше ставка теряется полностью
 */
class Ruletka : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор игры в рулетку
     * @param parent Родительский виджет (по умолчанию nullptr)
     * 
     * Инициализирует интерфейс игры и начальные параметры рулетки.
     */
    explicit Ruletka(QWidget *parent = nullptr);
    
    /**
     * @brief Слот для отображения окна игры
     * 
     * Показывает окно рулетки и обновляет информацию
     * о балансе игрока и текущих ставках.
     */
    void slot_show();
    
    /**
     * @brief Деструктор игры в рулетку
     * 
     * Освобождает ресурсы, используемые игрой.
     */
    ~Ruletka();

private slots:
    /**
     * @brief Обработчик кнопки возврата в главное меню
     * 
     * Закрывает окно рулетки и возвращает игрока
     * в главное меню казино.
     */
    void on_BackButton_clicked();

    /**
     * @brief Обработчик кнопки запуска игры
     * 
     * Запускает процесс вращения рулетки, проверяет баланс,
     * вычисляет результат и начисляет выигрыш при наличии.
     */
    void on_ButtonPlay_clicked();

    /**
     * @brief Обработчик кнопки ставки 100 robux
     * 
     * Устанавливает размер ставки на минимальную сумму.
     * Базовая ставка, доступная всегда.
     */
    void on_ButtonStavka100_clicked();

    /**
     * @brief Обработчик кнопки ставки 500 robux
     * 
     * Устанавливает размер ставки на среднюю сумму.
     */
    void on_ButtonStavka500_clicked();

    /**
     * @brief Обработчик кнопки ставки 1000 robux
     * 
     * Устанавливает размер ставки на максимальную сумму.
     * Кнопка доступна только при достаточном балансе.
     */
    void on_ButtonStavka1000_clicked();

    /**
     * @brief Обработчик ставки на красный цвет
     * 
     * Устанавливает ставку на красные сектора рулетки.
     * Коэффициент выигрыша: x2
     */
    void on_ButtonStavkaRed_clicked();

    /**
     * @brief Обработчик ставки на черный цвет
     * 
     * Устанавливает ставку на черные сектора рулетки.
     * Коэффициент выигрыша: x2
     */
    void on_ButtonStavkaBlack_clicked();

    /**
     * @brief Обработчик ставки на зеленый цвет
     * 
     * Устанавливает ставку на зеленый сектор рулетки.
     * Коэффициент выигрыша: x14 (редкий сектор)
     */
    void on_ButtonStavkaGreen_clicked();

private:
    /** @brief Указатель на UI объект игры */
    Ui::Ruletka *ui;

    /** @brief Размер текущей ставки (100, 500 или 1000 robux) */
    int size_of_stavka;
    
    /** @brief Объект ставки: 1 - красный, 2 - черный, 3 - зеленый */
    int object_of_stavka;

signals:
    /**
     * @brief Сигнал возврата в главное меню
     * 
     * Испускается при нажатии кнопки возврата для
     * перехода обратно в главное меню.
     */
    void to_main();
};

#endif // RULETKA_H
