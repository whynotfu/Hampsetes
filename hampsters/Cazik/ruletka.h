/**
 * @file ruletka.h
 * @brief Игра "Рулетка" - классическая казино игра
 * @author Development Team
 * @date 2025
 * @version 1.0
 * 
 * Этот файл содержит объявление класса Ruletka, который реализует
 * упрощенную версию классической игры "Рулетка". Игра включает
 * систему ставок на цвета (красный, черный, зеленый) и размеры ставок,
 * с соответствующими коэффициентами выплат.
 */

#ifndef RULETKA_H
#define RULETKA_H

#include <QDialog>
#include "clientapi.h"

namespace Ui {
class Ruletka;
}

/**
 * @brief Игра "Рулетка" - ставки на цвета
 * 
 * Класс Ruletka реализует упрощенную версию классической казино-игры "Рулетка".
 * Игровая механика включает:
 * - Ставки на три цвета: красный, черный, зеленый
 * - Три размера ставок: 100, 500, 1000 робуксов
 * - Различные коэффициенты выплат для каждого цвета
 * - Анимацию вращения рулетки
 * 
 * Правила игры:
 * - Игрок выбирает размер ставки (100/500/1000 робуксов)
 * - Игрок выбирает цвет для ставки (красный/черный/зеленый)
 * - При нажатии "Играть" рулетка случайно останавливается на одном из цветов
 * - Выплаты: красный/черный - 2:1, зеленый - 14:1 (джекпот)
 */
class Ruletka : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор игры "Рулетка"
     * @param parent Родительский виджет
     */
    explicit Ruletka(QWidget *parent = nullptr);
    
    /**
     * @brief Показать окно игры
     * 
     * Отображает интерфейс рулетки и подготавливает начальное состояние
     * элементов управления ставками
     */
    void slot_show();
    
    /**
     * @brief Деструктор игры "Рулетка"
     */
    ~Ruletka();

private slots:
    /**
     * @brief Обработчик кнопки "Назад"
     * 
     * Возвращает игрока в главное меню казино
     */
    void on_BackButton_clicked();

    /**
     * @brief Обработчик кнопки "Играть"
     * 
     * Запускает игровой процесс:
     * - Проверяет, что выбраны размер ставки и цвет
     * - Проверяет достаточность средств на балансе
     * - Генерирует случайный результат
     * - Запускает анимацию рулетки
     * - Вычисляет и начисляет выигрыш
     */
    void on_ButtonPlay_clicked();

    /**
     * @brief Обработчик кнопки ставки 100 робуксов
     * 
     * Устанавливает размер ставки в 100 робуксов
     */
    void on_ButtonStavka100_clicked();

    /**
     * @brief Обработчик кнопки ставки 500 робуксов
     * 
     * Устанавливает размер ставки в 500 робуксов
     */
    void on_ButtonStavka500_clicked();

    /**
     * @brief Обработчик кнопки ставки 1000 робуксов
     * 
     * Устанавливает размер ставки в 1000 робуксов
     */
    void on_ButtonStavka1000_clicked();

    /**
     * @brief Обработчик ставки на красный цвет
     * 
     * Устанавливает ставку на красный (коэффициент выплаты 2:1)
     */
    void on_ButtonStavkaRed_clicked();

    /**
     * @brief Обработчик ставки на черный цвет
     * 
     * Устанавливает ставку на черный (коэффициент выплаты 2:1)
     */
    void on_ButtonStavkaBlack_clicked();

    /**
     * @brief Обработчик ставки на зеленый цвет
     * 
     * Устанавливает ставку на зеленый джекпот (коэффициент выплаты 14:1)
     */
    void on_ButtonStavkaGreen_clicked();

private:
    Ui::Ruletka *ui;          ///< Пользовательский интерфейс игры

    ClientApi *clientApi;     ///< API для взаимодействия с сервером

    int size_of_stavka;       ///< Размер текущей ставки в робуксах
    int object_of_stavka;     ///< Цвет ставки (1-красный, 2-черный, 3-зеленый)

signals:
    /**
     * @brief Сигнал возврата в главное меню
     * 
     * Испускается при завершении игровой сессии и возврате
     * в основное меню казино
     */
    void to_main();
};

#endif // RULETKA_H
