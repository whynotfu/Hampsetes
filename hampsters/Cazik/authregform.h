#ifndef AUTHREGFORM_H
#define AUTHREGFORM_H

/*!
 * \file authregform.h
 * \brief Заголовочный файл класса AuthRegForm.
 *
 * Этот файл содержит объявление класса AuthRegForm, который реализует
 * форму для авторизации и регистрации пользователей, а также работу с
 * сетевыми соединениями.
 */

#include <QObject>
#include <QDialog>
#include <QTcpServer>
#include <QTcpSocket>
#include <QtNetwork>
#include <QByteArray>

namespace Ui {
    /*!
     * \brief Пространство имён для пользовательского интерфейса формы AuthRegForm.
     */
    class AuthRegForm;
}

/*!
 * \brief Класс AuthRegForm.
 *
 * Данный класс наследуется от QDialog и предоставляет интерфейс для
 * авторизации и регистрации пользователей. Кроме того, он управляет
 * сетевым соединением посредством QTcpSocket.
 */
class AuthRegForm : public QDialog
{
    Q_OBJECT

public:
    /*!
     * \brief Конструктор AuthRegForm.
     *
     * Инициализирует форму авторизации/регистрации, устанавливая начальное
     * состояние элементов управления.
     *
     * \param parent Родительский виджет (по умолчанию \c nullptr).
     */
    explicit AuthRegForm(QWidget *parent = nullptr);

    /*!
     * \brief Деструктор AuthRegForm.
     *
     * Освобождает выделенные ресурсы, связанные с интерфейсом.
     */
    ~AuthRegForm();

private slots:
    /*!
     * \brief Слот для переключения между режимами авторизации и регистрации.
     *
     * Обрабатывает нажатие кнопки, изменяя видимость элементов управления в форме.
     */
    void on_ToRegButton_clicked();

    /*!
     * \brief Слот для обработки нажатия кнопки авторизации.
     *
     * Проверяет корректность введённых данных и, при успешной авторизации,
     * инициирует сетевое соединение и генерирует сигнал \c auth_ok.
     */
    void on_AuthButton_clicked();

    /*!
     * \brief Слот для обработки нажатия кнопки регистрации.
     *
     * Проверяет корректность введённых данных регистрации и, при успехе,
     * генерирует сигнал \c auth_ok для дальнейшей обработки.
     */
    void on_RegButton_clicked();

private:
    Ui::AuthRegForm *ui;      //!< Указатель на объект пользовательского интерфейса формы.
    QTcpSocket* socket;       //!< TCP сокет для установления соединения с сервером.
    QByteArray Data;          //!< Массив байтов для передачи данных.

    /*!
     * \brief Изменяет видимость элементов в зависимости от выбранного режима.
     *
     * При переключении между режимами авторизации и регистрации изменяет
     * отображение элементов (например, поля для повторного ввода пароля).
     *
     * \param change Если \c true, включается режим регистрации; если \c false,
     *               отображается режим авторизации.
     */
    void set_visible_inReg(bool);

    /*!
     * \brief Очищает поля ввода.
     *
     * Сбрасывает текст в полях логина, пароля и подтверждения пароля.
     */
    void clear();

signals:
    /*!
     * \brief Сигнал успешной авторизации или регистрации.
     *
     * Генерируется при корректном вводе данных и успешном завершении процесса.
     *
     * \param QString Логин пользователя, прошедшего авторизацию или регистрацию.
     */
    void auth_ok(
