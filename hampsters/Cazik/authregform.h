/**
 * @file authregform.h
 * @brief Заголовочный файл формы авторизации и регистрации
 * @author Команда разработчиков
 * @date 2025
 * @version 1.0
 * 
 * Содержит объявление класса AuthRegForm, который отвечает за
 * аутентификацию пользователей и регистрацию новых аккаунтов.
 */

#ifndef AUTHREGFORM_H
#define AUTHREGFORM_H

#include <QObject>
#include <QDialog>
#include <QTcpServer>
#include <QTcpSocket>
#include <QtNetwork>
#include <QByteArray>

namespace Ui {
class AuthRegForm;
}

/**
 * @brief Форма авторизации и регистрации пользователей
 * 
 * Класс AuthRegForm представляет диалоговое окно для входа в систему
 * и регистрации новых пользователей. Поддерживает:
 * - Авторизацию существующих пользователей
 * - Регистрацию новых аккаунтов
 * - Переключение между режимами авторизации и регистрации
 * - Сетевое взаимодействие с сервером (если необходимо)
 * 
 * Форма является точкой входа в приложение и первым экраном,
 * который видит пользователь при запуске.
 */
class AuthRegForm : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор формы авторизации
     * @param parent Родительский виджет (по умолчанию nullptr)
     * 
     * Инициализирует интерфейс формы и настраивает начальное состояние.
     */
    explicit AuthRegForm(QWidget *parent = nullptr);
    
    /**
     * @brief Деструктор формы авторизации
     * 
     * Освобождает ресурсы и закрывает сетевые соединения.
     */
    ~AuthRegForm();

private slots:
    /**
     * @brief Обработчик нажатия кнопки перехода к регистрации
     * 
     * Переключает интерфейс в режим регистрации нового пользователя.
     * Изменяет видимость элементов формы для ввода данных регистрации.
     */
    void on_ToRegButton_clicked();

    /**
     * @brief Обработчик нажатия кнопки авторизации
     * 
     * Выполняет процедуру входа в систему с введенными учетными данными.
     * Проверяет корректность логина и пароля, и при успехе генерирует
     * сигнал auth_ok для перехода к главному меню.
     */
    void on_AuthButton_clicked();

    /**
     * @brief Обработчик нажатия кнопки регистрации
     * 
     * Выполняет регистрацию нового пользователя в системе.
     * Проверяет уникальность логина и создает новый аккаунт при успехе.
     */
    void on_RegButton_clicked();

private:
    /** @brief Указатель на UI объект формы */
    Ui::AuthRegForm *ui;

    /** @brief TCP сокет для сетевого взаимодействия с сервером */
    QTcpSocket* socket;
    
    /** @brief Буфер для хранения сетевых данных */
    QByteArray Data;

    /**
     * @brief Управление видимостью элементов в режиме регистрации
     * @param visible true для показа элементов регистрации, false для скрытия
     * 
     * Изменяет видимость полей и кнопок в зависимости от текущего режима
     * (авторизация или регистрация).
     */
    void set_visible_inReg(bool visible);

    /**
     * @brief Очистка полей ввода формы
     * 
     * Стирает весь введенный пользователем текст в полях логина и пароля.
     * Используется для сброса формы после неудачных попыток входа.
     */
    void clear();

signals:
    /**
     * @brief Сигнал успешной авторизации
     * @param login Логин авторизованного пользователя
     * 
     * Испускается при успешном входе в систему и используется
     * для перехода к главному меню приложения.
     */
    void auth_ok(QString login);
};

#endif // AUTHREGFORM_H
