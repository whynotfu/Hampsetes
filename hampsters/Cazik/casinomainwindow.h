/**
 * @file casinomainwindow.h
 * @brief Главное окно казино с меню выбора мини-игр
 * @author Development Team
 * @date 2025
 * @version 1.0
 * 
 * Этот файл содержит объявление класса CasinoMainWindow, который представляет
 * основное меню казино "Хампстерс". Окно позволяет пользователю выбирать
 * различные мини-игры (слоты, рулетка, кости, кликер, угадай число),
 * а также переходить в админ-панель или личный кабинет.
 */

#ifndef CASINOMAINWINDOW_H
#define CASINOMAINWINDOW_H

#include <QMainWindow>
#include <QMessageBox>

namespace Ui {
class CasinoMainWindow;
}

/**
 * @brief Главное окно казино с интерфейсом выбора мини-игр
 * 
 * Класс CasinoMainWindow представляет основное меню казино "Хампстерс".
 * Предоставляет пользователю возможность:
 * - Просматривать доступные мини-игры с помощью карусели
 * - Запускать выбранную игру
 * - Переходить в админ-панель (для администраторов)
 * - Переходить в личный кабинет
 * - Возвращаться к форме авторизации
 * 
 * Окно отображает визуальные превью игр и их названия, позволяя
 * пользователю переключаться между различными развлечениями.
 */
class CasinoMainWindow : public QMainWindow
{
    Q_OBJECT

public:
    /**
     * @brief Конструктор главного окна казино
     * @param parent Родительский виджет
     */
    explicit CasinoMainWindow(QWidget *parent = nullptr);
    
    /**
     * @brief Деструктор главного окна казино
     */
    ~CasinoMainWindow();

private:
    Ui::CasinoMainWindow *ui; ///< Пользовательский интерфейс, сгенерированный Qt Designer

    int game_slot; ///< Индекс текущей выбранной мини-игры в карусели

    QPixmap Image; ///< Изображение превью текущей игры
    QPixmap Name;  ///< Изображение названия текущей игры

public slots:
    /**
     * @brief Показать главное окно казино
     * 
     * Отображает окно и подготавливает интерфейс для взаимодействия
     */
    void slot_show();

    /**
     * @brief Сменить отображаемую мини-игру в карусели
     * @param visible Видимость элементов интерфейса
     * @param gameImage Изображение превью игры
     * @param gameName Изображение названия игры
     * 
     * Обновляет визуальное представление выбранной игры
     */
    void change_minigame(bool visible, QPixmap gameImage, QPixmap gameName);

private slots:
    /**
     * @brief Обработчик нажатия кнопки "Следующая игра"
     * 
     * Переключает карусель на следующую доступную мини-игру
     */
    void on_NextGameButton_clicked();
    
    /**
     * @brief Обработчик нажатия кнопки "Играть"
     * 
     * Запускает выбранную мини-игру, отправляя соответствующий сигнал
     */
    void on_PlayButton_clicked();

    /**
     * @brief Обработчик нажатия кнопки "Админ-панель"
     * 
     * Переход в панель администратора (доступно только админам)
     */
    void on_Admin_page_button_clicked();

    /**
     * @brief Обработчик нажатия кнопки "Личный кабинет"
     * 
     * Переход в пользовательскую панель управления аккаунтом
     */
    void on_pushButton_clicked();

    /**
     * @brief Обработчик нажатия кнопки "Назад"
     * 
     * Возврат к форме авторизации/регистрации
     */
    void on_pushButton_2_clicked();

signals:
    /**
     * @brief Сигнал запуска игры "Слоты" (Барабан)
     * 
     * Испускается при выборе и запуске игры в игровые автоматы
     */
    void baraban_sig();

    /**
     * @brief Сигнал запуска игры "Рулетка"
     * 
     * Испускается при выборе и запуске игры в рулетку
     */
    void ruletka_sig();

    /**
     * @brief Сигнал запуска игры "Кликер"
     * 
     * Испускается при выборе и запуске кликер-игры для заработка робуксов
     */
    void clicker_sig();

    /**
     * @brief Сигнал запуска игры "Кости"
     * 
     * Испускается при выборе и запуске игры в игральные кости
     */
    void kosti_sig();

    /**
     * @brief Сигнал запуска игры "Угадай число"
     * 
     * Испускается при выборе и запуске игры "больше-меньше"
     */
    void gtn_sig();

    /**
     * @brief Сигнал перехода в админ-панель
     * 
     * Испускается при запросе открытия панели администратора
     */
    void admn_sig();

    /**
     * @brief Сигнал перехода в пользовательскую панель
     * 
     * Испускается при запросе открытия личного кабинета
     */
    void user_sig();

    /**
     * @brief Сигнал возврата к авторизации
     * 
     * Испускается при запросе возврата к форме входа в систему
     */
    void back_sig();



};

#endif // CASINOMAINWINDOW_H
